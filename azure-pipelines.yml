# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

parameters:
  - name: WebApiName
    displayName: "WebAPI Name. (e.g.: BlogWebAPI)"
    type: string
    default: Hack3rLife

  - name: RepoName
    displayName: "Repository Name"
    type: string
    default: dotnet-cleanarchitecture-webapi
  
  - name: Email
    displayName: "Azure DevOps Email"
    type: string

  - name: UserName
    displayName: "Azure DevOps UserName"
    type: string
  
  - name: AZURE_PAT
    displayName: "Azure DevOps Personal Access Token"
    type: string 
    
steps:
- script: echo Creating a new WebAPI for ${{parameters.WebApiName}}!
  displayName: 'Run a one-line script'

- task: DotNetCoreCLI@2
  displayName: Installing Hack3rlife.ASP.NETCore.WebAPI NuGet Package
  inputs:
    command: 'custom'
    custom: 'new'
    arguments: '--install Hack3rlife.ASP.NETCore.WebAPI'
    
- task: DotNetCoreCLI@2
  displayName: Creating Project using CleanArchitectureNetCoreWebAPI Template
  inputs:
    command: 'custom'
    custom: 'new'
    arguments: 'CleanArchitectureNetCoreWebAPI -n ${{parameters.WebApiName}} -o tmp --force'
    
- task: CmdLine@2
  displayName: Creating Repository ${{parameters.RepoName}} for $(Project) Project
  inputs:
    script: |        
        echo ${{ parameters.AZURE_PAT }} | az devops login --org $(Organization)

        az config set extension.use_dynamic_install=yes_without_prompt;
        az devops configure --defaults organization=$(Organization) project=$(Project);

        az repos create --name ${{ parameters.RepoName }};

        cd tmp
        git init -b main
        git config --global user.email "${{ parameters.Email }}"
        git config --global user.name "${{ parameters.UserName }}"
        git add .
        git commit -m "Initial Commit"

        git remote add origin https://${{ parameters.UserName }}:${{ parameters.AZURE_PAT }}@dev.azure.com/${{ parameters.UserName }}/$(Project)/_git/${{ parameters.RepoName }}
        
        git push -f -u origin main

        cd ..
        rmdir tmp -v --ignore-fail-on-non-empty
                                                                                     
- task: CmdLine@2
  displayName: Creating build pipeline
  inputs:
    script: |
        az config set extension.use_dynamic_install=yes_without_prompt;
        az devops configure --defaults organization=$(Organization) project=$(Project);
        az pipelines create --name '${{ parameters.RepoName }}-ci' --repository https://${{ parameters.UserName }}@dev.azure.com/${{ parameters.UserName }}/$(Project)/_git/${{ parameters.RepoName }} --yml-path azure-pipelines.yml --repository-type tfsgit --branch main --skip-first-run;